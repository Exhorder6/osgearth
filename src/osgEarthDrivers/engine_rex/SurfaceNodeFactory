/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2014 Pelican Mapping
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGEARTH_DRIVERS_REX_SURFACE_NODE_FACTORY
#define OSGEARTH_DRIVERS_REX_SURFACE_NODE_FACTORY 1

#include "Common"
#include "SurfaceNode"
#include "RexTerrainEngineOptions"
#include "MaskGenerator"
#include "GeometryPool"
#include "TileDrawable"
#include "RenderBindings"
#include <osg/Geode>

// forward declares
namespace osgEarth {
    class MapFrame;
    class TerrainTileModel;
    class ProgressCallback;
}

namespace osgEarth { namespace Drivers { namespace RexTerrainEngine
{
    using namespace osgEarth;

    /**
     * Interface for an object that can build a SurfaceNode from a
     * TerrainTileModel.
     */
    class SurfaceNodeFactory : public osg::Referenced
    {
    public:
        SurfaceNodeFactory(
            const TerrainTileModel* model,
            const MapFrame&         frame,
            const RenderBindings&   bindings,
            GeometryPool*           geometryPool);

        /**
         * Uses a TerrainTileModel to build a new SurfaceNode from data
         * in a MapFrame.
         */
        virtual SurfaceNode* createSurfaceNode();
        
    protected:

        /** Computes a bounding box to use for the new surface node, taking into
            account things like elevation textures */
        osg::BoundingBox computeBoundingBox() const;

    protected:
        const TerrainTileModel*       _model;
        const MapFrame&               _frame;
        MaskGenerator                 _maskSet;
        osg::ref_ptr<osg::Geode>      _geode;
        const RenderBindings          _bindings;
        osg::ref_ptr<GeometryPool>    _geometryPool;
    };

} } } // namespace osgEarth::Drivers::RexTerrainEngine

#endif // OSGEARTH_DRIVERS_REX_SURFACE_NODE_FACTORY
